
- name: Stampare le informazioni delle credenziali
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    user: "francesco"
    k8s_namespace: "ns1"
    password: "password"
    api_url_k8s: "XXxxxxx"
    verify_ssl: "false"
  tasks:

    - name: Recupera le credenziali tramite ID 16
      uri:
        url: "https://test-awx-aap-test.apps.okd.pecsvil.local/api/v2/credentials/16/"
        method: GET
        user: francesco.cerenzia
        password: password
        force_basic_auth: yes
        status_code: 200
        return_content: yes
        validate_certs: false
      register: response

    # - name: Stampa api_credential
    #   debug:
    #     var: api_credential

    # - name: Stampa response
    #   debug:
    #     var: response

    - name: Estrarre i valori FC_TEST_K8S_CRED
      set_fact:
        custom_api_url_k8s: "{{ response.json.inputs.CUSTOM_API_URL_K8S }}"
        custom_verify_ssl: "{{ response.json.inputs.CUSTOM_VERIFY_SSL }}"
        user: "{{ response.json.inputs.user }}"
        password: "{{ response.json.inputs.VALUE_SPECIFIED_IN_NO_LOG_PARAMETER }}"
        namespace: "{{ response.json.inputs.namespace }}"

    - name: Stampa i valori CUSTOM_API_URL_K8S  CUSTOM_VERIFY_SSL
      debug:
        msg: "CUSTOM_API_URL_K8S: {{ custom_api_url_k8s }}, CUSTOM_VERIFY_SSL: {{ custom_verify_ssl }}"

    - name: Ottieni il token
      awx.awx.token:
        controller_host: "https://test-awx-aap-test.apps.okd.pecsvil.local/"
        controller_username: "francesco.cerenzia"
        controller_password: "password"
        validate_certs: false
      register: token_output

    - name: Estrarre il token
      set_fact:
        awx_token: "{{ token_output.ansible_facts.controller_token.token | default('') }}"

    - name: Stampa il token se presente
      debug:
        var: awx_token
      when: awx_token != ''

    # - name: Stampa il token se presente
    #   debug:
    #     var: token_output

    - name: Recupera le informazioni della credenziale tramite ID val17
      uri:
        url: "https://test-awx-aap-test.apps.okd.pecsvil.local/api/v2/credentials/17/"
        method: GET
        user: francesco.cerenzia
        password: password
        force_basic_auth: yes
        status_code: 200
        return_content: yes
        validate_certs: false
      register: k8s_credential_info_custom

    - name: Recupera le informazioni della credenziale tramite ID val30
      uri:
        url: "https://test-awx-aap-test.apps.okd.pecsvil.local/api/v2/credential_types/30/"
        method: GET
        user: francesco.cerenzia
        password: password
        force_basic_auth: yes
        status_code: 200
        return_content: yes
        validate_certs: false
      register: k8s_credential_info

    - name: Attesa conferma
      pause:
        prompt: "Conferma view parametri Credential==> "
        minutes: 2

    - name: Stampa le informazioni della credenziale FC_TEST_K8S_CRED
      debug:
        msg:
          - "API URL K8S: {{ custom_api_url_k8s }}"
          - "Verify SSL Option: {{ custom_verify_ssl }}"
          - "User: {{ user }}"
          - "Password: {{ password }}"
          - "Namespace: {{ namespace }}"

    - name: Stampa le informazioni della FC_TESTK8S_2
      debug:
        var: k8s_credential_info_custom.json.inputs

    # - name: Stampa le informazioni della CRED type creata
    #   debug:
    #     var: k8s_credential_info.json.inputs